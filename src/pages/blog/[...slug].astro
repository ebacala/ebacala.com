---
import { getCollection } from 'astro:content';

import '/public/css/app.css';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const blogTitle = entry.data.title;
const blogAuthor = entry.data.author;
const blogDescription = entry.data.description;
const blogDate = new Date(entry.data.date)
const blogDateString = `${blogDate.getFullYear()}-${(blogDate.getMonth() + 1).toString().padStart(2, '0')}-${blogDate.getDate().toString().padStart(2, '0')}`

const canonicalUrl = new URL(entry.slug, Astro.site);
const url = canonicalUrl.href;
---

<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#ffffff">
    
    <meta name="description" content={blogDescription}>
    <meta name="robots" content="noimageindex">
    <title>{blogTitle}</title>

    <script is:inline defer async src="https://cloud.umami.is/script.js" data-website-id="a26c5f40-65b5-4a99-90c5-0280f3de8fbf" data-domains="ebacala.com"></script>
    
    <link rel="stylesheet" href="/css/app.css">
    <link rel="canonical" href={url}>
  
    <link rel="icon" type="image/png" href="/favicon.ico">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">

    <link rel="sitemap" href="/sitemap-index.xml" />
  </head>

  <body class="p-6 lg:p-10 bg-primary font-primary">
    <section class="w-full max-w-screen-md mx-auto space-y-4 md:space-y-6 lg:space-y-8">
      <a href="/blog" class="text-base md:text-lg lg:text-xl text-center italic block">&larr; Back</a>

      <h1 class="text-3xl md:text-5xl lg:text-6xl italic text-center">{blogTitle}</h1>
      <h2 class="text-base md:text-lg lg:text-xl italic">Published {blogDateString}.</h2>

      <article class="text-base md:text-lg lg:text-xl text-justify space-y-4 indent-5">
        <Content />
        <p class="text-base md:text-lg lg:text-xl text-right italic">{blogAuthor}</p>
      </article>

      <a href="#" class="text-base md:text-lg lg:text-xl text-center italic block">&uarr; Back to top</a>
    </section>
  </body>

  <script>
    // Make every <code> line's width set to the maximum line width found
    document.addEventListener('DOMContentLoaded', () => {
      const article = document.querySelector('article');
      if (article) {
        const preCodes = article.querySelectorAll('pre code');
        preCodes.forEach((preCode) => {
          const lines = preCode.querySelectorAll('.line');

          let maxWidth = 0;

          lines.forEach(line => {
            const width = line.getBoundingClientRect().width;
            if (width > maxWidth) {
              maxWidth = width;
            }
          });
          lines.forEach(line => {
            (line as HTMLElement).style.width = `${maxWidth}px`;
          });
        });
      }
    });
  </script>
</html>